name: build

on:
  push:
    branches: [ main ]
    tags: 
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  PROJECT_PATH: src/JubanShared/
  PROJECT_FILE: JubanShared.csproj
  SOLUTION_FILE: JubanShared.sln

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_ROOT_USERNAME: mongodb
          MONGO_INITDB_ROOT_PASSWORD: mongodb
        ports:
          - 27017:27017
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: bump version
      run: |
        pwd
        echo ${{ startsWith(github.ref,'refs/tags/v') }}
        IS_RELEASE_TAG=${{ startsWith(github.ref,'refs/tags/v') }}
        echo $IS_RELEASE_TAG
        if [ "$IS_RELEASE_TAG" == "true" ]; then ALPHA=""; else ALPHA="-alpha.$GITHUB_RUN_NUMBER"; fi
        sed -i "s/<\/Version/$ALPHA<\/Version/" $PROJECT_PATH$PROJECT_FILE
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: |
        dotnet list . package
        dotnet tool install -g dotnet-reportgenerator-globaltool || true
        dotnet test -v n --collect:"XPlat Code Coverage" --no-build 
        find . -name "coverage.cobertura.xml" -exec ~/.dotnet/tools/reportgenerator -reports:'{}' -targetdir:coverage -reporttypes:TextSummary \; -exec cat coverage/Summary.txt \;
        find . -name "coverage.cobertura.xml" -exec ~/.dotnet/tools/reportgenerator -reports:'{}' -targetdir:coverage-html -reporttypes:HtmlInline_AzurePipelines \; 
    - name: Publish
      env: 
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
      run: |
        if [ "$GITHUB_REF" == "stable" ]; then PackConfiguration="Release"; else PackConfiguration="Debug"; fi
        dotnet pack -c $PackConfiguration $PROJECT_PATH$PROJECT_FILE
        dotnet nuget push ${PROJECT_PATH}bin/$PackConfiguration/*.nupkg -k $NUGET_KEY -s https://api.nuget.org/v3/index.json
    - name: Checkout static site
      uses: actions/checkout@v2
      with:
        repository: jubanlabs/code-coverage
        ref: main
        path: pages
        token: ${{ secrets.PAT_PUB_REPO }}
    - name: upload codecoverage
      run: |
        mkdir -p pages/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER
        cp -r coverage-html/* pages/$GITHUB_REPOSITORY/$GITHUB_RUN_NUMBER
        cd pages
        C_RAGE=`grep 'Line coverage' ../coverage/Summary.txt| sed -r 's/Line coverage: (.*)/\1/'`
        echo "{\"schemaVersion\": 1,\"label\": \"coverage\",\"message\": \"$C_RAGE\",\"color\": \"orange\"}" > $GITHUB_REPOSITORY/badge.txt
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "codecoverage for $GITHUB_REPOSITORY #$GITHUB_RUN_NUMBER"
        git push